version: "3.8"

services:
  react-ui:
    build:
      context: ./services/jsapp
    ports:
      - "3000:3000"
    container_name: react-ui
    stdin_open: true
    volumes:
      - ./services/jsapp/:/usr/src/app/
      - /usr/src/app/node_modules/

  web:
    container_name: webapp
    build: ./services/web
    command: uvicorn main:app --host '0.0.0.0' --port 5000 --reload
    restart: always
    volumes:
      - ./services/web/:/usr/src/app/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      # - celery
      # - celery-beat
    networks:
      - fastapi-reacat-template-project

  db:
    image: postgres:13-alpine
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=service_management
    networks:
      - fastapi-reacat-template-project

  celery:
    build: ./services/web
    container_name: celery
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A main.celery_app worker --loglevel=info
    volumes:
      - ./services/web/:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - ./.env.dev
    networks:
      - fastapi-reacat-template-project

  celery-beat:
    build: ./services/web
    container_name: celery-beat
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A main.celery_app beat --loglevel=info
    volumes:
      - ./services/web/:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - ./.env.dev
    networks:
      - fastapi-reacat-template-project

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - fastapi-reacat-template-project

volumes:
  postgres_data:

networks:
  fastapi-reacat-template-project:
